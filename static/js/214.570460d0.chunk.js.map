{"version":3,"file":"static/js/214.570460d0.chunk.js","mappings":"qPAEaA,EAAOC,EAAAA,GAAAA,KAAH,4HAQJC,EAAmBD,EAAAA,GAAAA,OAAH,6LAYhBE,EAAwBF,EAAAA,GAAAA,KAAH,wIASrBG,EAAkBH,EAAAA,GAAAA,MAAH,qG,SCtBfI,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAkBMC,EAAY,WAChBD,EAAc,GACf,EAED,OACE,+BACE,UAACT,EAAD,CAAMM,SAhBW,SAAAK,GACnBA,EAAIC,iBAEsB,KAAtBJ,EAAWK,QAIfP,EAASE,GACTE,KAJEI,MAAM,iCAKT,EAOG,WACE,SAACZ,EAAD,CAAkBa,KAAK,SAAvB,UACE,SAACZ,EAAD,8BAGF,SAACC,EAAD,CACEY,SA5BkB,SAAAL,GACxB,IAAQM,EAAUN,EAAIO,cAAdD,MAERR,EAAcQ,EACf,EAyBOA,MAAOT,EACPO,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,iCAKrB,E,0BCSD,EArDe,WAAO,IAAD,EACnB,GAA0Cd,EAAAA,EAAAA,UAAS,IAAnD,eAAOe,EAAP,KAAsBC,EAAtB,KAEA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAK,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GAEpCC,GAAWC,EAAAA,EAAAA,MAoBjB,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAIJ,EACF,KACEK,EAAAA,EAAAA,IAAiBL,GAAOM,MAAK,SAAAC,GAC3BX,GAAiB,OAAIW,EAAIC,SAC1B,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CAEJ,GAAE,CAACT,KAGF,UAACY,EAAA,EAAD,YACE,SAAClC,EAAD,CAAYC,SApBS,SAAAkC,GACvBd,EAC0B,KAAxBc,EAA6B,CAAEb,MAAOa,GAAwB,CAAC,EAElE,IAiB6B,IAAzBlB,EAAcmB,QAA0B,KAAVd,IAC7B,gEAGDL,EAAcmB,OAAS,IACtB,yDAC6B,wBAAKd,IADlC,QAIF,wBACGL,EAAcoB,KAAI,SAAAC,GACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMlB,GAAxC,SACGc,EAAMK,SAFFL,EAAME,GAMlB,QAIR,C","sources":["components/searchForm/SearchForm.styled.js","components/searchForm/SearchForm.js","pages/movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  height: 28px;\n  width: 28px;\n  border-radius: 5px;\n  background-color: #ffffff;\n  cursor: pointer;\n  :hover,\n  :active {\n    background-color: #1111;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  list-style: none;\n`;\n\nexport const SearchFormInput = styled.input`\n  width: 200px;\n  height: 28px;\n  border-radius: 4px;\n  font-size: 14px;\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = evt => {\n    const { value } = evt.currentTarget;\n\n    setInputValue(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (inputValue.trim() === '') {\n      alert('Search query can not be empty.');\n      return;\n    }\n    onSubmit(inputValue);\n    clearForm();\n  };\n  const clearForm = () => {\n    setInputValue('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <SearchFormButtonLabel>üîç</SearchFormButtonLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          onChange={handleInputChange}\n          value={inputValue}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films in database\"\n        />\n      </Form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { PageWrap } from 'components/pageWrap/PageWrap';\nimport { SearchForm } from 'components/searchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/Api';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query') ?? '';\n\n  const location = useLocation();\n\n  const handleFormSubmit = searchQueryFromForm => {\n    setSearchQuery(\n      searchQueryFromForm !== '' ? { query: searchQueryFromForm } : {}\n    );\n  };\n\n  useEffect(() => {\n    if (query) {\n      try {\n        getMoviesByQuery(query).then(res => {\n          setSearchResults([...res.results]);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [query]);\n\n  return (\n    <PageWrap>\n      <SearchForm onSubmit={handleFormSubmit}></SearchForm>\n      {searchResults.length === 0 && query !== '' && (\n        <p>The search has not given any results</p>\n      )}\n\n      {searchResults.length > 0 && (\n        <h1>\n          Search results for keyword <em>{query}</em>:\n        </h1>\n      )}\n      <ul>\n        {searchResults.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </PageWrap>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","SearchFormButton","SearchFormButtonLabel","SearchFormInput","SearchForm","onSubmit","useState","inputValue","setInputValue","clearForm","evt","preventDefault","trim","alert","type","onChange","value","currentTarget","autoComplete","autoFocus","placeholder","searchResults","setSearchResults","useSearchParams","searchQuery","setSearchQuery","query","get","location","useLocation","useEffect","getMoviesByQuery","then","res","results","error","console","log","PageWrap","searchQueryFromForm","length","map","movie","to","id","state","from","title"],"sourceRoot":""}