{"version":3,"file":"static/js/787.f786e5e6.chunk.js","mappings":"uMAqCA,UAhCgB,WACd,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAG,OAAIN,EAAeM,EAAIC,QAAvB,GAGlC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACP,KAGF,+BACGU,EAAAA,EAAAA,SAAQZ,IACP,qEAEA,wBACGA,EAAYa,KAAI,SAAAC,GACf,OACE,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,OAKV,C","sources":["components/reviews/Reviews.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from 'services/Api';\nimport { isEmpty } from 'lodash';\n\nconst Reviews = () => {\n  const [movieReview, setMovieReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      getMovieReviews(movieId).then(res => setMovieReview(res.results));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {isEmpty(movieReview) ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul>\n          {movieReview.map(review => {\n            return (\n              <li key={review.id}>\n                <b>{review.author}</b>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;"],"names":["useState","movieReview","setMovieReview","movieId","useParams","useEffect","getMovieReviews","then","res","results","error","console","log","isEmpty","map","review","author","content","id"],"sourceRoot":""}