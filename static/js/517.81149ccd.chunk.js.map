{"version":3,"file":"static/js/517.81149ccd.chunk.js","mappings":"0PAEaA,EAAWC,EAAAA,GAAAA,GAAH,qNASRC,EAAWD,EAAAA,GAAAA,GAAH,qE,SCoCrB,EAzCa,WACX,OAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GAAG,OAAIN,EAAaM,EAAIC,KAAKC,OAAO,EAAG,GAApC,GAG/B,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACR,KAGF,+BACGW,EAAAA,EAAAA,SAAQb,IACP,oFAEA,+BACE,SAACJ,EAAD,UACGI,EAAUc,KAAI,SAAAC,GACb,IAAIC,EAAS,GAMb,OADEA,EAJGD,EAAME,aAIH,0CAAsCF,EAAME,cAFhD,6JAIF,UAACnB,EAAD,YACE,gBAAKoB,IAAKF,EAAQG,IAAG,UAAKJ,EAAMK,SAChC,uBAAIL,EAAMK,QACV,wBAAKL,EAAMM,cAHEN,EAAMO,GAMxB,SAMZ,C","sources":["components/cast/Cast.styled.js","components/cast/Cast.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr;\n  gap: 0px 5px;\n  grid-auto-flow: row;\n  grid-template-areas: '. . . . . . . .';\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/Api';\nimport { isEmpty } from 'lodash';\nimport { CastList, CastItem } from './Cast.styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      getMovieCast(movieId).then(res => setMovieCast(res.cast.splice(0, 8)));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {isEmpty(movieCast) ? (\n        <p>We don't have any information about cast for this movie</p>\n      ) : (\n        <>\n          <CastList>\n            {movieCast.map(actor => {\n              let source = '';\n              if (!actor.profile_path) {\n                source =\n                  'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg';\n              } else\n                source = `https://image.tmdb.org/t/p/w500/${actor.profile_path}`;\n              return (\n                <CastItem key={actor.id}>\n                  <img src={source} alt={`${actor.name}`} />\n                  <p>{actor.name}</p>\n                  <em>{actor.character}</em>\n                </CastItem>\n              );\n            })}\n          </CastList>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","CastItem","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCast","then","res","cast","splice","error","console","log","isEmpty","map","actor","source","profile_path","src","alt","name","character","id"],"sourceRoot":""}